INSERT OVERWRITE TABLE feedback_portal_l0_fact
select shipment_id,
shipmenttype,
sheet_id,
hubid_key,
agentid_key,
agentid,
questionid,
question,
type,
option1,
option2,
option3,
option4,
option5,
option6,
option7,
option8,
option9,
option10,
option11,
option12,
concat(nvl(option1n,""),nvl(concat('/',option2n),""),nvl(concat('/',option3n),""),nvl(concat('/',option4n),""),nvl(concat('/',option5n),""),nvl(concat('/',option6n),""),nvl(concat('/',option7n),""),nvl(concat('/',option8n),""),nvl(concat('/',option9n),""),nvl(concat('/',option10n),""),nvl(concat('/',option11n),""),nvl(concat('/',option12n),"")) as option_details,
feedback_id,
rating,
createdatetime,
comments,
shipmentstatus,
source,
seller_type,
service_tier,
shipment_item_unit_dispatch_service_tier,
case when shipmentstatus in 
('NotPicked_Attempted_CustomerNoResponse','NotPicked_Attempted_RequestForReschedule','Undelivered_No_Response','Undelivered_Request_For_Reschedule')
 and (option1 in (21,25) or option2 in (21,25)or option3 in (21,25) or option4 in (21,25) 
 or option5 in (21,25) or option6 in (21,25)or option7 in (21,25) or option8 in (21,25)
 or option9 in (21,25) or option10 in (21,25)or option11 in (21,25) or option12 in (21,25)) 
 then 1 else 0 end as customer_dependancy ,
 case when vendor_tracking_id is not null then 1 else 0 end as large_flag,
 case when option1 in(28,29,30,31) and option2 is NULL then 1 else 0 end as customer_selected_others,
primary_product_key,
ekl_fin_zone,
shipment_value,
customer_pincode_key,
shipment_lzn_classification
from
 (select shipment_id,
shipmenttype,
sheet_id,
hubid_key,
agentid_key,
agentid,
questionid,
question,
type,
max(option1) as option1,
max(option2) as option2,
max(option3) as option3,
max(option4) as option4,
max(option5) as option5,
max(option6) as option6,
max(option7) as option7,
max(option8) as option8,
max(option9) as option9,
max(option10) as option10,
max(option11) as option11,
max(option12) as option12,
max(option1n) as option1n,
max(option2n) as option2n,
max(option3n) as option3n,
max(option4n) as option4n,
max(option5n) as option5n,
max(option6n) as option6n,
max(option7n) as option7n,
max(option8n) as option8n,
max(option9n) as option9n,
max(option10n) as option10n,
max(option11n) as option11n,
max(option12n) as option12n,
feedback_id,
rating,
createdatetime,
comments,
shipmentstatus,
source,
shipment_item_unit_dispatch_service_tier,
vendor_tracking_id,
primary_product_key,
seller_type,
ekl_fin_zone,shipment_value,service_tier,customer_pincode_key,shipment_lzn_classification
from (select portal.shipment_id as shipment_id,
portal.shipmenttype,
portal.sheet_id as sheet_id,
lookupkey('facility_id',portal.hubid) as hubid_key,
lookupkey('agent_id',portal.agentid) as agentid_key,
portal.agentid,
portal.questionid,
questions.`data`.question,
questions.`data`.type,
case when rnk=1 then portal.option_id end as option1,
case when rnk=2 then portal.option_id end as option2,
case when rnk=3 then portal.option_id end as option3,
case when rnk=4 then portal.option_id end as option4,
case when rnk=5 then portal.option_id end as option5,
case when rnk=6 then portal.option_id end as option6,
case when rnk=7 then portal.option_id end as option7,
case when rnk=8 then portal.option_id end as option8,
case when rnk=9 then portal.option_id end as option9,
case when rnk=10 then portal.option_id end as option10,
case when rnk=11 then portal.option_id end as option11,
case when rnk=12 then portal.option_id end as option12,
case when rnk=1 then portal.option end as option1n,
case when rnk=2 then portal.option end as option2n,
case when rnk=3 then portal.option end as option3n,
case when rnk=4 then portal.option end as option4n,
case when rnk=5 then portal.option end as option5n,
case when rnk=6 then portal.option end as option6n,
case when rnk=7 then portal.option end as option7n,
case when rnk=8 then portal.option end as option8n,
case when rnk=9 then portal.option end as option9n,
case when rnk=10 then portal.option end as option10n,
case when rnk=11 then portal.option end as option11n,
case when rnk=12 then portal.option end as option12n,
portal.feedback_id as feedback_id,
portal.rating,
portal.createdatetime,
portal.comments,
portal.shipmentstatus,
portal.source,
fact.shipment_item_unit_dispatch_service_tier,
shipment.vendor_tracking_id,
fact.primary_product_key,
fact.seller_type,fact.ekl_fin_zone,fact.shipment_value,fact.service_tier,fact.customer_pincode_key,fact.shipment_lzn_classification
from
 (select 
portal.shipment_id,
portal.shipmenttype, 
portal.sheet_id,
portal.hubid,
portal.agentid,
portal.questionid,
portal.feedback_id,
portal.rating,
portal.createdatetime,
portal.comments,
portal.shipmentstatus,
portal.source,
portal.option_id,
fact.option,
row_number() OVER (PARTITION BY portal.shipment_id,portal.sheet_id order by portal.option_id asc ) as rnk
from 
(select portal.`data`.shipmentid as shipment_id,
portal.`data`.shipmenttype as shipmenttype,
portal.`data`.sheetid as sheet_id,
portal.`data`.hubid as hubid,
portal.`data`.agentid as agentid,
portal.`data`.questionid as questionid,
portal.`data`.feedbackid as feedback_id,
portal.`data`.rating as rating,
portal.`data`.createdatetime as createdatetime,
portal.`data`.comments as comments,
portal.`data`.shipmentstatus as shipmentstatus,
portal.`data`.source as source,
portal1.option_id as option_id
from bigfoot_journal.dart_fkint_scp_ekl_feedback_portal_1 portal
left outer join (select portal.`data`.shipmentid as shipment_id,
portal.`data`.shipmenttype as shipmenttype,
portal.`data`.sheetid as sheet_id,
portal.`data`.hubid as hubid,
portal.`data`.agentid as agentid,
portal.`data`.questionid as questionid,
portal.`data`.feedbackid as feedback_id,
portal.`data`.rating as rating,
portal.`data`.createdatetime as createdatetime,
portal.`data`.comments as comments,
portal.`data`.shipmentstatus as shipmentstatus,
portal.`data`.source as source,
EXPLODE_0 as option_id
from bigfoot_journal.dart_fkint_scp_ekl_feedback_portal_1 portal LATERAL VIEW explode(`data`.options) exploded_table AS EXPLODE_0) portal1
on portal.`data`.shipmentid=portal1.shipment_id and portal1.sheet_id=portal.`data`.sheetid ) portal
left outer join bigfoot_external_neo.scp_ekl__feedback_option_l0_fact fact ON portal.option_id=fact.optionid) portal
left outer join bigfoot_snapshot.dart_fkint_scp_ekl_feedback_questions_1_0_view questions ON questions.`data`.questionid=portal.questionid
left outer join (select distinct shipment_lzn_classification,customer_pincode_key,ekl_fin_zone,shipment_value,vendor_tracking_id,primary_product_key,seller_type,service_tier,shipment_item_unit_dispatch_service_tier 
from bigfoot_external_neo.scp_ekl__runsheet_shipment_map_l1_fact) fact ON portal.shipment_id=fact.vendor_tracking_id
left outer join bigfoot_external_neo.scp_ekl__la_shipment_fact shipment ON shipment.vendor_tracking_id=portal.shipment_id)a 
group by 
a.shipment_id,
a.shipmenttype,
a.sheet_id,
a.hubid_key,
a.agentid_key,
a.agentid,
a.questionid,
a.question,
a.type,
a.feedback_id,
a.rating,
a.createdatetime,
a.comments,
a.shipmentstatus,
a.source,
a.seller_type,
a.service_tier,
a.shipment_item_unit_dispatch_service_tier,
a.vendor_tracking_id,
a.primary_product_key,
a.ekl_fin_zone,
a.shipment_value,
a.customer_pincode_key,
a.shipment_lzn_classification)b;